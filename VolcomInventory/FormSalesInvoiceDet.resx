<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="LargeImageCollection.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>114, 45</value>
  </metadata>
  <assembly alias="DevExpress.Utils.v15.1" name="DevExpress.Utils.v15.1, Version=15.1.7.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
  <data name="LargeImageCollection.ImageStream" type="DevExpress.Utils.ImageCollectionStreamer, DevExpress.Utils.v15.1" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFpEZXZFeHByZXNzLlV0aWxzLnYxMS4xLCBWZXJzaW9uPTExLjEu
        Ny4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI4OGQxNzU0ZDcwMGU0OWEMAwAAAFFT
        eXN0ZW0uRHJhd2luZywgVmVyc2lvbj0yLjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRv
        a2VuPWIwM2Y1ZjdmMTFkNTBhM2EFAQAAAChEZXZFeHByZXNzLlV0aWxzLkltYWdlQ29sbGVjdGlvblN0
        cmVhbWVyAgAAAAlJbWFnZVNpemUERGF0YQQHE1N5c3RlbS5EcmF3aW5nLlNpemUDAAAAAgIAAAAF/P//
        /xNTeXN0ZW0uRHJhd2luZy5TaXplAgAAAAV3aWR0aAZoZWlnaHQAAAgIAwAAABgAAAAYAAAACQUAAAAP
        BQAAAGwVAAACNgMAAIlQTkcNChoKAAAADUlIRFIAAAAYAAAAGAgGAAAA4Hc9+AAAAAFzUkdCAK7OHOkA
        AAAEZ0FNQQAAsY8L/GEFAAAC4ElEQVRIS7WU7UtTYRjGZ/ZqL9iXNM2hA5lSgoGRkJKKYKgMLcoQJIn6
        EERf/BZkbjvqatahRLJYbWUUIWZKQU73pmtOZ65My4p8oQ99XP/B3X2fl3U2n42N6ILfYTznuq/reR7G
        UcVT+9sjFYi1y1G+emdKBw9nWwR6vSfB5KxcpXdIsWRPXDiUi7j6fI3w+utVmFw3g2NFD+Mr7WHcayaw
        f+eg338WDPZjLpqRxuMLjQ3dzvLQ0NJlePOtDV4sNsPThQYmzxZOwavlSzDypQ16PDUhmpVi2EJDRbfz
        OAwuXoCBjw1gma9MCGuwBgaXzsMtzwmgDClOFAAI0BGNE0dDTz6chvtzZdAXKEkaW1AHZnc1neTvdSkK
        hvtmquDuTDHw/sINDH4+hzZR878eMz1Ef6AaOsZKrVK8WCDs3lGEhoNg9uUyiRbLI6IBznmYrko8BXqp
        gO90a8DkzYpJtFgeGcqiTLRJBWMlrq6pDIhHtFgeJZSJNrFAP1EInDsjgl5/iRCUiEaXr2yYp0yUXKAF
        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
</value>
  </data>
  <metadata name="EPForm.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>21, 45</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>39</value>
  </metadata>
</root>